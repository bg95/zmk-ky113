/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    macros {
        StartPwd: StartPwd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N2 &kp N3 &kp N6 &kp N5 &kp N4 &kp ENTER>;
            label = "STARTPWD";
        };

        Gmail: Gmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp C &kp O &kp E &kp N &kp DOT &kp K &kp DOT &kp W &kp A &kp N &kp G &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
            label = "GMAIL";
        };

        Qmail: Qmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N1 &kp N5 &kp N0 &kp N9 &kp N0 &kp N4 &kp N7 &kp N8 &kp N4 &kp AT &kp Q &kp Q &kp DOT &kp C &kp O &kp M>;
            label = "QMAIL";
        };

        Phone: Phone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp N8 &kp N9 &kp N1 &kp N2 &kp N3 &kp N7 &kp N6 &kp N3 &kp N1 &kp N9>;
            label = "PHONE";
        };

        Pwd_B: Pwd_B {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(B) &kp A &kp LS(Z) &kp H &kp E &kp N &kp G &kp LS(D) &kp A &kp O &kp AMPS &kp N1 &kp N2>;
            label = "PWD_B";
        };

        Pwd_H: Pwd_H {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(H) &kp E &kp R &kp O &kp N1 &kp N2 &kp N3 &kp N4>;
            label = "PWD_H";
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "HOMEROW_MODS";
        };

        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <500>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            label = "AUTO_SHIFT";
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            //  ---------------------------------------------------------------------------------
            //  |      |ESC   |F1  |F2  |F3       |F4         |F5  |F6  |    |F7  |F8         |F9       |F10 |F11  |F12   |&to 1|    |C_MUTE|    |ESC        |TAB        |BSPC        |EQUAL|
            //  |      |GRAVE |N1  |N2  |N3       |N4         |N5  |N6  |    |N7  |N8         |N9       |N0  |MINUS|EQUAL |BSPC |    |HOME  |    |NLCK       |SLASH      |MULTIPLY    |MINUS|
            //  |C_MUTE|TAB   |Q   |W   |E        |R          |T   |    |    |Y   |U          |I        |O   |P    |LBKT  |RBKT |BSLH|END   |    |7          |8          |9           |PLUS |
            //  |1     |CAPS  |A   |S   |D        |&lt 4 F    |G   |    |    |H   |J          |K        |L   |SEMI |SQT   |ENTER|    |PG_UP |    |4          |5          |6           |PLUS |
            //  |2     |LSHIFT|Z   |X   |C        |V          |B   |    |    |N   |M          |COMMA    |DOT |FSLH |RSHIFT|UP   |    |PG_DN |    |1          |2          |3           |ENTER|
            //  |3     |LCTRL |LGUI|LALT|&lt 2 DEL|&lt 1 SPACE|    |    |    |    |&lt 1 SPACE|&lt 3 INS|RALT|RCTRL|LEFT  |DOWN |    |RIGHT |    |&lt 2 KP_N0|&lt 2 KP_N0|&lt 5 KP_DOT|ENTER|

            bindings = <
&kp ESC     &kp F1        &kp F2        &kp F3        &kp F4  &kp F5     &kp F6     &kp F7         &kp F8  &kp F9             &kp F10   &kp F11    &kp F12     &kp PRINTSCREEN  &kp DELETE  &StartPwd  &Gmail              &Qmail              &Phone
&kp GRAVE   &kp N1        &kp N2        &kp N3        &kp N4  &kp N5     &kp N6     &kp N7         &kp N8  &kp N9             &kp N0    &kp MINUS  &kp EQUAL   &kp BSPC         &kp HOME    &Pwd_B     &Pwd_H              &none               &none
&kp C_MUTE  &kp TAB       &kp Q         &kp W         &kp E   &kp R      &kp T      &kp Y          &kp U   &kp I              &kp O     &kp P      &kp LBKT    &kp RBKT         &kp BSLH    &kp END    &kp LC(LA(DELETE))  &kp LS(LC(DELETE))  &none   &none
&kp F14     &kp CAPSLOCK  &kp A         &kp S         &kp D   &kp F      &kp G      &kp H          &kp J   &kp K              &kp L     &kp SEMI   &kp SQT     &kp ENTER        &kp PG_UP   &none      &none               &none               &none
&kp F15     &kp LSHIFT    &kp Z         &kp X         &kp C   &kp V      &kp B      &kp N          &kp M   &kp COMMA          &kp DOT   &kp FSLH   &kp RSHIFT  &kp UP           &kp PG_DN   &none      &none               &none               &none
&kp F16     &kp LCTRL     &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE  &kp SPACE  &kp RIGHT_ALT  &mo 2   &kp RIGHT_CONTROL  &kp LEFT  &kp DOWN   &kp RIGHT   &kp ENTER        &kp ENTER   &none      &none
            >;

            label = "Qwerty";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        function_layer {
            //  ---------------------------------------------------------------------------------
            //  |    |    |     |            |           |     |     |    |    |                       |     |    |    |    |    |&to 2|    |    |    |EQUAL|BSPC        |TAB        |ESC        |
            //  |    |N0  |     |            |           |     |     |    |    |                       |     |    |    |    |    |     |    |    |    |MINUS|MULTIPLY    |SLASH      |NLCK       |
            //  |    |    |N6   |N7          |N8         |N9   |DOT  |    |    |&mt KP_SLASH KP_MULTIPLY|N7   |N8  |N9  |    |    |     |    |    |    |PLUS |9           |8          |7          |
            //  |    |    |SLASH|MULTIPLY    |MINUS      |PLUS |ENTER|    |    |PLUS                   |1    |2   |3   |    |    |     |    |    |    |PLUS |6           |5          |4          |
            //  |    |    |HOME |END         |PG_UP      |PG_DN|BSPC |    |    |MINUS                  |N0   |DOT |DOT |    |    |     |    |    |    |ENTER|3           |2          |1          |
            //  |    |    |     |LC(LS(HOME))|LC(LS(END))|     |     |    |    |                       |ENTER|    |    |    |    |     |    |    |    |ENTER|&lt 5 KP_DOT|&lt 3 KP_N0|&lt 3 KP_N0|

            bindings = <
&trans  &kp C_MUTE  &kp C_PREV      &kp C_PLAY_PAUSE  &kp C_NEXT       &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN    &kp C_BRI_UP    &kp LG(P)     &trans           &trans  &trans  &kp LG(LS(S))  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans            &trans           &trans        &trans        &trans          &trans          &trans        &trans           &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &mmv MOVE_UP      &trans           &trans        &trans        &trans          &mkp LCLK       &mkp MCLK     &mkp RCLK        &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans      &mmv MOVE_LEFT  &mmv MOVE_DOWN    &mmv MOVE_RIGHT  &trans        &trans        &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans            &trans           &trans        &trans        &mkp MB4        &trans          &trans        &mkp MB5         &trans  &trans  &trans         &trans  &trans  &trans  &trans  &trans
&trans  &trans      &trans          &trans            &trans           &trans        &trans        &trans          &mo 3           &trans        &trans           &trans  &trans  &trans         &trans  &trans  &trans
            >;

            label = "Function";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        control_layer {
            //  ---------------------------------------------------------------------------------
            //  |    |&bootloader |        |        |        |          |         |    |    |    |    |    |    |    |&bootloader|&to 0|    |    |    |    |    |    |    |
            //  |    |BT_CLR      |BT_SEL 0|BT_SEL 1|BT_SEL 2|BT_SEL 3  |BT_SEL 4 |    |    |    |    |    |    |    |           |     |    |    |    |    |    |    |    |
            //  |    |EP_TOG      |        |        |ENTER   |          |         |    |    |    |    |    |    |    |           |     |    |    |    |    |    |    |    |
            //  |    |            |        |        |        |LS(LC(N8))|LC(ENTER)|    |    |    |    |    |    |    |           |     |    |    |    |    |    |    |    |
            //  |    |&out OUT_TOG|        |        |        |          |         |    |    |    |    |    |    |    |           |     |    |    |    |    |    |    |    |
            //  |    |            |        |        |        |          |         |    |    |    |    |    |    |    |           |     |    |    |    |    |    |    |    |

            bindings = <
&trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &bt BT_CLR_ALL  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &mo 3   &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans
            >;

            label = "Control";
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        Advanced_layer {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
            label = "Advanced";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
